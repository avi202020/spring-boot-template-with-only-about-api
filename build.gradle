buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/central" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.1"
    }
}

plugins {
    id 'application'
    id "org.springframework.boot" version "2.1.4.RELEASE"
    id "com.github.lkishalmi.gatling" version "3.0.2"
    id 'scala'

//    id "io.spring.dependency-management" version "1.0.6.RELEASE"
}


ext['netty.version'] = '4.0.51.Final'


repositories {
    maven { url "https://maven.aliyun.com/repository/central" }

}

application {
    mainClassName = "com.ecommerce.Application"
    applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005","-Xverify:none"]
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    implementation platform('org.springframework.boot:spring-boot-dependencies:2.1.4.RELEASE')
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE")
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE")

    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
    implementation "org.springframework.cloud:spring-cloud-starter-zipkin"

    compile 'org.scala-lang:scala-library:2.13.0'

    //spring dependencies
    implementation('org.springframework.boot:spring-boot-starter-web')

    //common dependencies
    implementation('com.google.guava:guava:27.0.1-jre')
    implementation('commons-io:commons-io:2.6')
    implementation('org.apache.commons:commons-lang3')
    implementation('org.apache.commons:commons-collections4:4.2')
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'


    //jackson dependencies
    implementation('com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.8')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.8')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8')
    implementation('com.fasterxml.jackson.core:jackson-core:2.9.8')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.9.8')
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.9.8')

    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.3.0'

    //test dependencies
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.rest-assured:spring-mock-mvc")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation('org.junit.jupiter:junit-jupiter-engine')
    testImplementation('org.mockito:mockito-junit-jupiter:2.26.0')
}


sourceSets {
    componentTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }

    apiTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}


configurations {
    componentTestImplementation.extendsFrom testImplementation
    componentTestRuntimeOnly.extendsFrom testRuntimeOnly
    apiTestImplementation.extendsFrom testImplementation
    apiTestRuntimeOnly.extendsFrom testRuntimeOnly
}


task componentTest(type: Test) {
    description = 'Run component tests.'
    group = 'verification'
    testClassesDirs = sourceSets.componentTest.output.classesDirs
    classpath = sourceSets.componentTest.runtimeClasspath
    shouldRunAfter test
}


task apiTest(type: Test) {
    description = 'Run API tests.'
    group = 'verification'
    testClassesDirs = sourceSets.apiTest.output.classesDirs
    classpath = sourceSets.apiTest.runtimeClasspath
    shouldRunAfter componentTest
}

configurations.all {
    exclude group: "junit", module: "junit"
    exclude group: "org.assertj", module: "assertj-core"
}

tasks.withType(Test) {
    useJUnitPlatform()
}

check.dependsOn componentTest
check.dependsOn apiTest

bootJar {
    launchScript()
}

wrapper {
    gradleVersion = '5.2.1'
}

apply from: "${rootProject.projectDir}/gradle/idea.gradle"
apply from: "${rootProject.projectDir}/gradle/spotbugs/spotbugs.gradle"
apply from: "${rootProject.projectDir}/gradle/checkstyle/checkstyle.gradle"
apply from: "${rootProject.projectDir}/gradle/version-info.gradle"
apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"
